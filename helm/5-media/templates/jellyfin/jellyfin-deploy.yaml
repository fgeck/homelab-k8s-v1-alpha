{{- if or (eq .Values.media.platform "jellyfin") (eq .Values.media.platform "all") }}
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: media
    meta.helm.sh/release-namespace: media
  labels:
    app.kubernetes.io/name: jellyfin
  name: jellyfin
  namespace: media
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: jellyfin
  progressDeadlineSeconds: 600
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jellyfin
      annotations:
        meta.helm.sh/release-name: media
        meta.helm.sh/release-namespace: media
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile:
          type: RuntimeDefault
      automountServiceAccountToken: false
      containers:
      - name: main
        env:
        - name: TZ
          value: Europe/Berlin
        - name: HOSTNAME
          value: "jellyfin"
        - name: JELLYFIN_PublishedServerUrl
          value: https://watch.home.{{ .Values.edge.domain }}
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        image: jellyfin/jellyfin:2025010605
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8096
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        ports:
        - containerPort: 8096
          name: main
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8096
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 2
          timeoutSeconds: 5
        resources:
          limits:
            cpu: "4"
            memory: 10Gi
          requests:
            cpu: 10m
            memory: 50Mi
        startupProbe:
          failureThreshold: 60
          httpGet:
            path: /health
            port: 8096
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 2
        volumeMounts:
        - mountPath: /config
          name: jellyfin-config
        - mountPath: /cache
          name: jellyfin-cache
        - mountPath: /media
          name: media
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
      dnsConfig:
        options:
        - name: ndots
          value: "1"
      restartPolicy: Always
      terminationGracePeriodSeconds: 60
      volumes:
      - name: jellyfin-config
        persistentVolumeClaim:
          claimName: jellyfin-config-pvc
      - name: jellyfin-cache
        persistentVolumeClaim:
          claimName: jellyfin-cache-pvc
      - name: media
        persistentVolumeClaim:
          claimName: media-data-pvc
{{- end }}
